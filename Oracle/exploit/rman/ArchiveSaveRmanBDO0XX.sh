#!/bin/bash
############################################################
#
# Script de sauvegarde des archives
#
# a lancer sous l utilisateur oracle 
#
# Sauvegarde des archives et du fichier de controle
#
############################################################
#declaration des variables
ORACLE_SID=$1
PROC=`basename $0`
ORASAV=/sauve/${ORACLE_SID}/RMAN
ORALOG=/app/script/rman/log
DATMIN=`date +%Y%m%d%H%M`
FICLOG=RMANdb_Arch_${ORACLE_SID}_${DATMIN}.log
DAT=`date +%Y%m%d%H%M`
DDATE=`date +%Y%m%d`
TTIME=`date +%H:%M:%S`
RMAN=1
MACHINE=`hostname`
KEEP=7
RET=0

host_name=$(hostname -s)
script_name=$(basename "$0")


#declaration des variables pour nagios/centreon
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3
state=${STATE_OK}
error_message="OK"

#declaration des fonctions

backuparch_rman ()
   {

rman target / << EOF  >> ${ORALOG}/${FICLOG} 2>&1
  run {
allocate channel DISK1 type disk format='$ORASAV/%d_full_%T_%U_%s.arc' ;
  configure channel device type disk maxpiecesize 5G;
  configure retention policy to recovery window of $KEEP days;
  sql 'alter system switch logfile';
   backup  archivelog all delete all input;
   backup format '${ORASAV}/${ORACLE_SID}%U.ctl' current controlfile;
     backup spfile ;
   release channel DISK1 ;
    }
exit
EOF
 }


backupmaint_rman ()
 {

rman target / <<EOF   >> ${ORALOG}/${FICLOG} 2>&1
ALLOCATE CHANNEL FOR MAINTENANCE DEVICE TYPE DISK ;
crosscheck backup;
delete noprompt expired backup;
exit
EOF

}


verif_rmanD_save ()
{

    if [ ! -s ${ORALOG}/${FICLOG} ]
    then
      echo "------>  : Controle de la sauvegarde de la base $ORACLE_SID"
      echo "PROBLEME : PAS DE FICHIER LOG DE SAUVEGARDE RMAN "
      RMAN_SAVE="PROBLEME"
           RET=1
    fi
  # -----------------------------------------------------------------------------------------------------
  # Verifier s'il y a des erreurs Oracle dans la log
  # -----------------------------------------------------------------------------------------------------

     ERROR=$(grep -i "^ora-" ${ORALOG}/${FICLOG}  | awk '{print $1};{exit}')
     # si on trouve des ORA-xxxx alors on sort (return 1)
     if [ "$ERROR" != "" ]
     then
       echo "------>  : Controle ORA-XXXX de la sauvegarde de la base $ORACLE_SID"
       echo "PROBLEME : IL Y A DES ERREURS DANS Le FICHIER LOG : VOIR SA LOG ${ORALOG}/${FICLOG}  !"
       DUMP_SAVE="PROBLEME"
            RET=1
     fi
  # Si pa s d'ORA-XXX , on cherche des ERREUR RMAN-XXXX

     if [ "$ERROR" = "" ] && ((RMAN == 1))
     then
        ERROR=$(grep -i "^rman-"  ${ORALOG}/${FICLOG} | awk '{print $1};{exit}')
     fi

     if [ "$ERROR" != "" ]
     then
       echo "------>  : Controle RMAN-XXXX de la sauvegarde de la base $ORACLE_SID"
       echo "ERROR : IL Y A DES ERREUR DANS LE FICHIER LOG : VOIR SA LOG ${ORALOG}/${FICLOG} !"
       DUMP_SAVE="WARNING"
            RET=2
     fi

   if [ $RET = 0 ]
  then
   echo "$MACHINE;$DDATE;$TTIME;$ORACLE_SID;OK;${ORALOG}/${FICLOG}"
  else
     echo "$MACHINE;$DDATE;$TTIME;$ORACLE_SID;KO;;;;"
        state=${STATE_CRITICAL}
        error_message="La sauvegarde de la base ${ORACLE_SID} n'a pas fonctionne" 
  fi
 



}

# usage

 if [ $# -ne 1 ]
  then
  echo " " 
 echo "       Il manque un parametre " 
 echo "       Exemple : USAGE : $script_name ORACLE_SID "
 echo " "
exit 1
 fi

. /home/dba/oracle/dbaoraenv.sh $ORACLE_SID 

DDATE=`date +%Y%m%d`
TTIME=`date +%H:%M:%S`

echo " debut sauveharde archivelog le $DDATE a $TTIME"
backuparch_rman
DDATE=`date +%Y%m%d`
TTIME=`date +%H:%M:%S`

echo " fin sauveharde archivelog le $DDATE a $TTIME"

DDATE=`date +%Y%m%d`
TTIME=`date +%H:%M:%S`

echo " debut verif sauveharde archivelog le $DDATE a $TTIME"

verif_rmanD_save

DDATE=`date +%Y%m%d`
TTIME=`date +%H:%M:%S`

echo " fin verif sauveharde archivelog le $DDATE a $TTIME: STATUS $error_message"


