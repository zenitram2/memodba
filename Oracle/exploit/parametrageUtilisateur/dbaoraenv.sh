#!/bin/ksh
#==============================================================================
#
# NOM
#      dbaoraenv.sh
#
# ********************************************************
# AUTEUR           : MEMODBA
# VERSION          : 1.00.00 
# DATE DE CREATION : 20140228
# ********************************************************
# DESCRIPTION:
#      Script pour les versions Oracle 8i, 9i, 10g, 11g, 12c
#		Parametrage de session linux
#
# USAGE 
#		dbaoraenv.sh
# Emplacement
#		/home/dba/oracle/
# 
# ********************************************************
# *                   MODIFICATIONS                      *
# *------------------------------------------------------*
# * Quand    | Qui | Quoi                                *
# *------------------------------------------------------*
# ********************************************************

#==============================================================================
export ORAENV_ASK="YES"
export CHANGE_ENV=yes
export ACCUEIL=no
#
# Determine how to suppress newline with echo command.
#
N=
C=
if echo "\c" | grep c >/dev/null 2>&1; then
    N='-n'
else
    C='\c'
fi


# -------------------------------------------------------------------------
# AttendreActionTouche(): Message attente action utilisateur
#       arguments: 1. texte du message
#
function AttendreActionTouche {
        echo ""
        if [ "$#" = "0" ]
        then
                MESS=""
        else
                MESS=$1
                printf "$MESS"
        fi
        echo ""
        #echo "Appuyer sur une entree pour continuer... "
        #read TOUCHE
}

function AffichageOratab {
case "$OS" in
        SunOS ) ORATAB=/var/opt/oracle/oratab ;;
        *     ) ORATAB=/etc/oratab ;;
        esac

        if [ -f ${ORATAB} ]
        then

                LIST_ORA_SID8=`egrep '^[A-Z,+].*:/.*/?9.*:(Y|y|N|n)($| |        )' \$ORATAB |cut -d: -f1 |tr "\n" " "`
                LIST_ORA_SID9=`egrep '^[A-Z,+].*:/.*/?9.*:(Y|y|N|n)($| |        )' \$ORATAB |cut -d: -f1 |tr "\n" " "`
                LIST_ORA_SID10=`egrep '^[A-Z,+].*:/.*/?10.*:(Y|y|N|n)($| |      )' \$ORATAB |cut -d: -f1 |tr "\n" " "`
                LIST_ORA_SID11=`egrep '^[A-Z,+].*:/.*/?11.*:(Y|y|N|n)($| |      )' \$ORATAB |cut -d: -f1 |tr "\n" " "`
                LIST_ORA_SID12=`egrep '^[A-Z,+].*:/.*/?12.*:(Y|y|N|n)($| |      )' \$ORATAB |cut -d: -f1 |tr "\n" " "`
                #---------------------------
                # Construction de l'affichage
                #---------------------------

                #sMessage="Oratab trouve : $ORATAB "
                sMessage="${sMessage} \nListe des ORACLE_SID depuis le fichier ${ORATAB}  :"
                sMessage="${sMessage}   \n\tInstance  8i  :  $LIST_ORA_SID8 "
                sMessage="${sMessage} \n\tInstance  9i  :  $LIST_ORA_SID9 "
                sMessage="${sMessage}   \n\tInstance 10g  :  $LIST_ORA_SID10 "
                sMessage="${sMessage}   \n\tInstance 11g  :  ${LIST_ORA_SID11}"
                sMessage="${sMessage}   \n\tInstance 12c  :  $LIST_ORA_SID12 "
				printf "$sMessage\n"
		else
				echo "Oratab non trouve : ${ORATAB}"
		fi
}
F_Detection_OS()
{
  OS=`uname -s`
  [ "$OS" = Linux ] && alias echo="echo -e" #Prend en compte les comandes \n \t ... comme sur AIX
  ORAENV_ASK="YES"
 }

 F_Detection_OS

        sMessage=""
        if [ "$#" -gt "0" ]
        then
case "$1" in
			HOME ) 
				AffichageOratab
				export ORAENV_ASK="NO"
				export CHANGE_ENV=no
				export ACCUEIL=yes				
				;;
			*) 
				export ORACLE_SID=$1
				export ORAENV_ASK="NO"
				export CHANGE_ENV=yes
			esac	
        fi

#        export CHANGE_ENV=yes
        #---------------------------------------------------------------------
        # Display the list of ORACLE_SID already presents in the ORATAB file :
        #---------------------------------------------------------------------

        case "$OS" in
        SunOS ) ORATAB=/var/opt/oracle/oratab ;;
        *     ) ORATAB=/etc/oratab ;;
        esac

        if [ -f ${ORATAB} ]
        then

                LIST_ORA_SID8=`egrep '^[A-Z,+].*:/.*/?9.*:(Y|y|N|n)($| |        )' \$ORATAB |cut -d: -f1 |tr "\n" " "`
                LIST_ORA_SID9=`egrep '^[A-Z,+].*:/.*/?9.*:(Y|y|N|n)($| |        )' \$ORATAB |cut -d: -f1 |tr "\n" " "`
                LIST_ORA_SID10=`egrep '^[A-Z,+].*:/.*/?10.*:(Y|y|N|n)($| |      )' \$ORATAB |cut -d: -f1 |tr "\n" " "`
                LIST_ORA_SID11=`egrep '^[A-Z,+].*:/.*/?11.*:(Y|y|N|n)($| |      )' \$ORATAB |cut -d: -f1 |tr "\n" " "`
                LIST_ORA_SID12=`egrep '^[A-Z,+].*:/.*/?12.*:(Y|y|N|n)($| |      )' \$ORATAB |cut -d: -f1 |tr "\n" " "`
                #---------------------------
                # Construction de l'affichage
                #---------------------------

                sMessage="Oratab trouve : $ORATAB "
                sMessage="${sMessage} \nListe des ORACLE_SID depuis le fichier ${ORATAB}  :"
                sMessage="${sMessage}   \n\tInstance  8i  :  $LIST_ORA_SID8 "
                sMessage="${sMessage} \n\tInstance  9i  :  $LIST_ORA_SID9 "
                sMessage="${sMessage}   \n\tInstance 10g  :  $LIST_ORA_SID10 "
                sMessage="${sMessage}   \n\tInstance 11g  :  ${LIST_ORA_SID11}"
                sMessage="${sMessage}   \n\tInstance 12c  :  $LIST_ORA_SID12 "

                #---------------------------
                # Ask for a new ORACLE_SID :
                #---------------------------

                case "$ORAENV_ASK" in
                        NO) NEW_ORA_SID=$ORACLE_SID ;;
                        * ) echo $N "$sMessage\n\tNew ORACLE_SID = [$ORACLE_SID] ?  $C"
                                read  NEW_ORA_SID ;;
                esac
		[ "${NEW_ORA_SID}" = "" ] && NEW_ORA_SID=$ORACLE_SID
                #-----------------------------
                # Search the new ORACLE_HOME :
                #-----------------------------

                case "$NEW_ORA_SID" in
                        ""      ) AttendreActionTouche "\n\tWarning : ORACLE_SID unchanged.\n"
                                ;;

                        [A-Z,+]*)
                                NEW_ORA_HOME=`grep "^$NEW_ORA_SID:" \$ORATAB | egrep ":/.*:(Y|y|N|n|W|w)($| |   )" | cut -d: -f2`
                                case "$NEW_ORA_HOME" in
                                /*) ORACLE_SID=$NEW_ORA_SID                                        
										CHANGE_ENV=yes
                                        ;;
                                * ) printf "\n\tCannot locate ORACLE_HOME for $NEW_ORA_SID"
                                        printf "\n\t(NEW_ORA_HOME=$NEW_ORA_HOME)"
                                        printf "\n\tWarning : ORACLE_SID unchanged.\n" ;;
                          esac
                          ;;
                        *     ) printf "\n\tThe expected ORACLE_SID must be upper case and 7 char Max."
                  AttendreActionTouche "\n\tWarning : ORACLE_SID unchanged.\n"
                  ;;
                esac

        else

                echo "Oratab non trouve : ${ORATAB}"

        fi

if [ "$ACCUEIL" = no ]
then
        #------------------------------------------------------------------------
        # Subtitute ORACLE_HOME (old) by NEW_ORA_HOME for the whole environment :
        #------------------------------------------------------------------------
		CHANGE_ENV=yes
        if [ "$CHANGE_ENV" = yes ]
        then
                echo "-----------------------------------------------------------------------"
                X=`env | egrep "(^|=|:)$ORACLE_HOME(:|/|$)" | sed "s;$ORACLE_HOME;$NEW_ORA_HOME;g"`
                echo "$X"
                eval "$X"
                echo "-----------------------------------------------------------------------"
        fi
fi

export ORACLE_HOME=$NEW_ORA_HOME
export ORACLE_SID=$NEW_ORA_SID
export PATH=$PATH:${ORACLE_HOME}/bin
