#!/bin/ksh
# ********************************************************
# AUTEUR           : MEMODBA
# VERSION          : 1.01.00 
# DATE DE CREATION : 20140702
# ********************************************************
# DESCRIPTION
#      Script pour les variables d'environment linux pour MySQL
#
# USAGE
#      envMysql.ksh
#-----------------------------------------------------------------------------------------------------
#
#----------------------------------------------------------------------------------------------------
# Variables List :
# MY_HOMEDIR : HOME directory of mysql user
# MY_TMPDIR : Temporary files directory
# MY_PDMDIR : Physical Data Model SQL scripts directory
# MY_DBADIR : DBA scripts directory
# MY_BINDIR : kit --> Scripts and conf file directory
# MY_LOGDIR : Logs scripts directory
# MY_TOOLSDIR : MySQL Tools directory
# MY_BACKUPDIR : Backup files (logical and physical) directory
# MY_VERSION : MySQL product release
# MY_SERVERNAME : MySQL server name
# MYSQL_HOME : Data directory (The path to the directory in which the server-specific my.cnf file resides)
# MYSQL_BINDIR : MySQL product directory
# MYSQL_HOST : hostname (used by the mysql command-line client)
# MYSQL_TCP_PORT : TCP/IP port number
# MYSQL_UNIX_PORT : Unix socket filename (used for connections to localhost)
# MYSQL_PS1 : MySQL prompt (command-line client)
# PATH : Binaries path (used by the shell to find MySQL programs)
# MANPATH : Man pages PATH
# LD_LIBRARY_PATH : Libraries path
#----------------------------------------------------------------------------------------------------
#
#set -x
#set -u
#set -v

[ `uname -s` = "Linux" ] && alias echo='echo -e'

# Source function library
if [ -r /opt/mysql/bin/fonctionsMysql.ksh ]
    then
      . /opt/mysql/bin/fonctionsMysql.ksh
    else
      echo "\tERROR - [MYQ-15001] THE FILE /opt/mysql/bin/fonctionsMysql.ksh DOESN'T EXIST OR IS NOT READABLE"
      exit 1
fi

#----------------------------------------------------------------------------------------------------
# Set environment variables according to choice
#----------------------------------------------------------------------------------------------------
Myq_choice()
{ 
unset List
Compt=0

for i in `cat ${MY_TAB} | egrep -v "^#|^$|^\s*$"`
do
 let Compt=${Compt}+1

 if [ ${NumInstance} -eq ${Compt} ]
    then
      MY_SERVERNAME=`echo ${i} | cut -d: -f2 | cut -d/  -f3`
      Myq_initMysqlEnv ${MY_SERVERNAME}

      End=Ok
      echo "\n ------------------ Choice ${Compt} --------------------------------------"
      echo "  MY_HOMEDIR=${MY_HOMEDIR}"
      echo "  MY_TMPDIR=${MY_TMPDIR}"
      echo "  MY_DBADIR=${MY_DBADIR}"
      echo "  MY_BINDIR=${MY_BINDIR}"
      echo "  MY_PDMDIR=${MY_PDMDIR}"
      echo "  MY_LOGDIR=${MY_LOGDIR}"
      echo "  MY_TOOLSDIR=${MY_TOOLSDIR}"
      echo "  MY_BACKUPDIR=${MY_BACKUPDIR}"
      echo "  MY_VERSION=${MY_VERSION}"
      echo "  MY_SERVERNAME=${MY_SERVERNAME}"
      echo "  MYSQL_HOME=${MYSQL_HOME}"
      echo "  MYSQL_BINDIR=${MYSQL_BINDIR}"
      echo "  MYSQL_HOST=${MYSQL_HOST}"
      echo "  MYSQL_TCP_PORT=${MYSQL_TCP_PORT}"
      echo "  MYSQL_UNIX_PORT=${MYSQL_UNIX_PORT}"
      echo "  MYSQL_PS1=${MYSQL_PS1}"
      echo "  PATH=${PATH}"
      echo "  MANPATH=${MANPATH}"
      echo "  LD_LIBRARY_PATH=${LD_LIBRARY_PATH}"
      echo " -----------------------------------------------------------------------"
      return 0
 fi
done
}

#----------------------------------------------------------------------------------------------------
# Display all MySQL servers
#----------------------------------------------------------------------------------------------------
Myq_affAllServers()
{
echo " ------------------------------------------------------------------------"
for i in `cat ${MY_TAB} | egrep -v "^#|^$|^\s*$"`
do
 let Compt=${Compt}+1

 MY_SERVERNAME=`echo ${i} | cut -d: -f2 | cut -d/  -f3`
 MYSQL_BINDIR=`echo ${i} | cut -d: -f1`
 MY_VERSION=`mysql --version | cut -d" " -f6`
 MYSQL_HOME=`echo ${i} | cut -d: -f2`
 MYSQL_TCP_PORT=`echo ${i} | cut -d: -f3`

 if [ -z ${List} ]
    then
      List=${Compt}
     else
      List="${List}|${Compt}"
 fi

 echo "\n ${Compt}  <>  MySQL : ${MY_VERSION} - MySQL Server : ${MY_SERVERNAME} - MySQL Port : ${MYSQL_TCP_PORT}"
 echo "           MYSQL_HOME ${MYSQL_HOME} "
 echo "         MYSQL_BINDIR ${MYSQL_BINDIR} "
done
echo "\n ------------------------------------------------------------------------"
return 0
}

#----------------------------------------------------------------------------------------------------
# Main
#----------------------------------------------------------------------------------------------------

Reply=" "
End=Nok

script=$0
servername=$1

[ `uname -s` = "Linux" ] && alias echo='echo -e'

Myq_initEnv ${servername}

if [ `whoami` != "${MysqlOsUser}" ]
   then
     echo "\t${COLOR_ERROR}ERROR - [MYQ-17002] THIS SHELL MUST BE EXECUTED BY THE USER ${MysqlOsUser}${COLOR_NORMAL}"
     return 1
fi

if [ ! -r ${MY_TAB} ]
   then
     echo "\t${COLOR_ERROR}ERROR - [MYQ-15002] THE FILE ${MY_TAB} DOESN'T EXIST OR IS NOT READABLE${COLOR_NORMAL}"
     return 1
fi

if [ `cat ${MY_TAB} | egrep -v "^#|^$|^\s*$" | wc -l` -eq 0 ]
   then
     echo "\t${COLOR_ERROR}ERROR - [MYQ-50002] THERE IS NO ${ProductName} SERVER CONFIGURED IN THE FILE ${MY_TAB}${COLOR_NORMAL}"
     return 1
fi

if [ -z ${servername} ]
   then
     while [ "${Reply}" != "q" ]
           do
             unset List
             Compt=0

             Myq_affAllServers

             echo "  Choice (q|Q=Quit) : \c"
             read Reply

			 if [ "${Reply}" = "q" -o "${Reply}" = "Q" ]
				then
				return 0
			 fi
			 
             if [ "${Reply}" -ge 1 -a "${Reply}" -le ${Compt} ]
                then
                  NumInstance=${Reply}
                  Myq_choice
                  [ "${End}" = "Ok" ] && return 0
                else
                  echo "\n\t${COLOR_ERROR}ERROR - REQUIRED CHOICE : ${List}|q|Q . HIT RETURN${COLOR_NORMAL}"
                  read X
             fi
           done
   else
     Myq_ctrlExistMysqlServer ${servername} no
     [ $? -eq 0 ] && Myq_initMysqlEnv ${servername}
     return 0
fi

