#==============================================================================
#
# NOM
#      my.cnf pour mysql 5.6
#
# ********************************************************
# AUTEUR           : MEMODBA
# VERSION          : 1.01.00
# DATE DE CREATION : 20150114
# ********************************************************
#***********************************************************************
#*                 MYSQL CLIENTS options 
#***********************************************************************
# The following options will be passed to all MySQL clients
[client]
#port=
#socket=
 
# mysql client options
[mysql]
# Refuse client connecting to server if it uses old (pre-4.1.1) protocol
secure-auth
# No automatic rehashing
no-auto-rehash
# Number of seconds before connection timeout
connect-timeout=43200

# mysqladmin client options
[mysqladmin]
# The maximum number of seconds before connection timeout. 
# Default : 43200(12H)
connect-timeout=300
# The maximum number of seconds to wait for server shutdown. 
# Default : 3600(1H)
shutdown-timeout=300

# mysqlcheck client options
[mysqlcheck]

# mysqldump client default options
[mysqldump]
# Do not cache each query result
quick

# mysqlimport client options
[mysqlimport]
# Load files in parallel. Number of threads to use for loading data.
use-threads=2
# Read all files through the client
local
# Print info about the various stages
verbose

# The MySQL server
[mysqld]
# Disable ARCHIVE storage engine
archive=OFF

#***********************************************************************
#*                 PERFORMANCE SCHEMA
#***********************************************************************
# 
# Indicate whether Performance Schema is enabled
performance_schema=OFF
# The number of rows per thread in the events_waits_history table
performance_schema_events_waits_history_size=10
# The number of rows in the events_waits_history_long table
performance_schema_events_waits_history_long_size=10000

#**********************************************************************f
#*                 GENERAL options 
#***********************************************************************
safe-user-create

# Blocks connections from all accounts that have passwords stored 
# in the old (pre-4.1) format. 
secure-auth

# The TCP/IP Address the MySQL Server will listen on
#bind-address=

# The port number to use when listening for TCP/IP connections
#port=

# Specifies the Unix socket file to use when listening for local connections
#socket=

# The path to the data directory
datadir=/data/mysql

# The path of the directory to use for creating temporary files
#tmpdir=

# Enables or disables user-defined partitioning support in the MySQL Server 
partition=ON

# Enable or disable, and start or stop, the event scheduler
event-scheduler=ON

# Enable binary logging. The server logs all statements that change data 
# to the binary log, which is used for backup and replication
#log-bin=

# The index file for binary log file names
#log-bin-index=

# If no argument is given, the option sets the variable to 1. # It affects 
# how MySQL enforces restrictions on stored function and trigger creation
log-bin-trust-function-creators=0

# If a write to the binary log causes the current log file size to exceed 
# the value of this variable, the server rotates the binary logs 
# (closes the current file and opens the next one).
max-binlog-size=256M

# Begining with MySQL 5.5.9, max_binlog_stmt_cache_size sets the size for
# the transaction cache only, and the upper limit for the transaction cache
# is governed exclusively by the max_binlog_cache_size system variable.
#max_binlog_stmt_cache_size=18446744073709547520

# General Query Log State and File Name
#general-log=1
#general-log-file=

# Log slow queries. Slow queries are queries which take more than the
# amount of time defined in "long_query_time" or which do not use
# indexes well, if log_long_format is enabled. It is normally good idea
# to have this turned on if you frequently add new queries to the
# system.
slow-query-log=1
slow-query-log-file=/opt/mysql/log/mysql-slow.log

# If you are using this option with the slow query log enabled, 
# queries that are expected to retrieve all rows are logged
#log-queries-not-using-indexes

# Log slow administrative statements such as OPTIMIZE TABLE, 
# ANALYZE TABLE, and ALTER TABLE to the slow query log.
#log-slow-admin-statements

# Log Output Destination : 
# destination for general query log and slow query log output
log-output=FILE

# All queries taking more than this amount of time (in seconds) will be
# trated as slow. Do not use "1" as a value here, as this will result in
# even very fast queries being logged from time to time (as MySQL
# currently measures time with second accuracy only).
long-query-time=30

# This option also applies to database names and table aliases
# 0 : table names are stored as specified and comparisons are case sensitive 
# 1 : table names are stored in lowercase on disk and comparisons are not case sensitive 
# 2 : table names are stored as given but compared in lowercase
lower-case-table-names=1

# The default character set and collation that will be used when a new 
# schema or table is created and no character set is defined
#character-set-server=
#collation-server=

# The default storage engine that will be used when create new tables
default-storage-engine=INNODB

# Set the SQL mode to strict
sql-mode="TRADITIONAL,NO_ENGINE_SUBSTITUTION"

# The maximum amount of concurrent sessions the MySQL server will
# allow. One of these connections will be reserved for a user with
# SUPER privileges to allow the administrator to login even if the
# connection limit has been reached.
max-connections=151

# The maximum size of one packet or any generated/intermediate string
max-allowed-packet=16M

# The number of seconds the server waits for activity on an interactive 
# connection before closing it
interactive-timeout=1000

# The number of seconds that the mysqld server waits for a connect packet 
# before responding with Bad handshake
connect-timeout=5

# The number of seconds the server waits for activity on a noninteractive 
# connection before closing it. This timeout applies only to TCP/IP and Unix 
# socket file connections 
wait-timeout=31536000

# The size of the cache to hold the SQL statements for the binary log during 
# a transaction. A binary log cache is allocated for each client if the server 
# supports any transactional storage engines and if the server has the binary 
# log enabled. If you often use large, multiple-statement transactions, you 
# can increase this cache size to get more performance
binlog-cache-size=32K

# Beginning with MySQL 5.5.9, this variable determines the size of the cache
# for the binary log to hold nontransactional statements issued during a
# transaction.
# Begining with MySQL 5.5.9, binlog_cache_size sets the size for the
# transaction cache only.
#binlog_stmt_cache_size=32K

# Query cache is used to cache SELECT results and later return them
# without actual executing the same query once again. Having the query
# cache enabled may result in significant speed improvements, if your
# have a lot of identical queries and rarely changing tables. See the
# "Qcache_lowmem_prunes" status variable to check if the current value
# is high enough for your load.
# Note: In case your tables change very often or if your queries are
# textually different every time, the query cache may result in a
# slowdown instead of a performance improvement.
query-cache-type=1
query-cache-limit=1M
query-cache-size=32M

# This buffer is allocated when MySQL needs to rebuild the index in
# REPAIR, OPTIMZE, ALTER table statements as well as in LOAD DATA INFILE
# into an empty table. It is allocated per thread so be careful with
# large settings.
sort-buffer-size=2M

# The number of open tables for all threads. Increasing this value 
# increases the number of file descriptors that mysqld requires
table-open-cache=256

# How many threads we should keep in a cache for reuse. When a client
# disconnects, the client's threads are put in the cache if there aren't
# more than thread_cache_size threads from before.  This greatly reduces
# the amount of thread creations needed if you have a lot of new
# connections. (Normally this doesn't give a notable performance
# improvement if you have a good thread implementation.)
thread-cache-size=8

# The maximum size of internal in-memory temporary tables. (The actual 
# limit is determined as the minimum of tmp_table_size and max_heap_table_size.) 
# If an in-memory temporary table exceeds the limit, 
# MySQL automatically converts it to an on-disk MyISAM table
tmp-table-size=46M

# This variable sets the maximum size to which MEMORY tables are allowed to grow. 
# The value of the variable is used to calculate MEMORY table MAX_ROWS values
max-heap-table-size=46M

# MYSQL 5.6 : 
# The set of metadata locks can be partitioned into separate hashes to permit 
# connections accessing different objects to use different locking hashes 
# and reduce contention. 
metadata-locks-hash-instances=256
# Disable the nonstandard behavior on TIMESTAMP
explicit-defaults-for-timestamp=1

#***********************************************************************
#*                 MyISAM Specific options 
#***********************************************************************

#***********************************************************************
#*                 INNODB Specific options 
#***********************************************************************

# The paths to individual data files and their sizes. The full directory path to 
# each data file is formed by concatenating innodb_data_home_dir to each path 
# specified here
#innodb-data-file-path=system.tbs:10M:autoextend

# The increment size (in MB) for extending the size of an auto-extending 
# tablespace file when it becomes full. Range : 1-1000. Default : 8
innodb-autoextend-increment=8

# The common part of the directory path for all InnoDB data files in the 
# shared tablespace
#innodb-data-home-dir=

# InnoDB creates each new table using its own .ibd file for storing data 
# and indexes, rather than in the shared tablespace
innodb-file-per-table

# Specify InnoDB shutdown mode : 0,1,2
# Default : 1
# 2 : InnoDB will just flush its logs and then shut down cold, as if 
# MySQL had crashed; no committed transaction will be lost, but crash 
# recovery will be done at the next startup
innodb-fast-shutdown=1

# The crash recovery mode. Possible values are from 0 to 6
innodb-force-recovery=0

# The timeout in seconds an InnoDB transaction may wait for a row lock 
# before giving up. A transaction that tries to access a row that is locked 
# by another InnoDB transaction will hang for at most this many seconds before 
# issuing the following error: ERROR 1205 (HY000): Lock wait timeout exceeded
innodb-lock-wait-timeout=50

# The directory path to the InnoDB log files
#innodb-log-group-home-dir=

# The number of log files in the log group. 
# InnoDB writes to the files in a circular fashion
innodb-log-files-in-group=3

# Controls whether InnoDB creates a file named innodb_status.<pid> 
# in datadir. If enabled, InnoDB periodically writes the output 
# of SHOW ENGINE INNODB STATUS to this file.
innodb-status-file=0

# The locking mode to use for generating auto-increment values.
# Range : 0 (traditional), 1 (consecutive), 2 (interleaved)
innodb-autoinc-lock-mode=1

# InnoDB support for two-phase commit in XA transactions : 0=OFF, 1=ON
innodb-support-xa=1

# The size of the buffer InnoDB uses for buffering log data. As soon as
# it is full, InnoDB will have to flush it to disk. As it is flushed
# once per second anyway, it does not make sense to have it very large
# (even with long transactions).
innodb-log-buffer-size=8M

# InnoDB, unlike MyISAM, uses a buffer pool to cache both indexes and
# row data. The bigger you set this the less disk I/O is needed to
# access data in tables. On a dedicated database server you may set this
# parameter up to 80% of the machine physical memory size. Do not set it
# too large, though, because competition of the physical memory may
# cause paging in the operating system.  Note that on 32bit systems you
# might be limited to 2-3.5G of user level memory per process, so do not
# set it too high.
innodb-buffer-pool-size=225M

# Size of each log file in a log group. You should set the combined size
# of log files to about 25%-100% of your buffer pool size to avoid
# unneeded buffer pool flush activity on log file overwrite. However,
# note that a larger logfile size will increase the time needed for the
# recovery process.
innodb-log-file-size=75M

# If set to 1, InnoDB will flush (fsync) the transaction logs to the
# disk at each commit, which offers full ACID behavior. If you are
# willing to compromise this safety, and you are running small
# transactions, you may set this to 0 or 2 to reduce disk I/O to the
# logs. Value 0 means that the log is only written to the log file and
# the log file flushed to disk approximately once per second. Value 2
# means the log is written to the log file at each commit, but the log
# file is only flushed to disk approximately once per second.
innodb-flush-log-at-trx-commit=1

# Number of threads allowed inside the InnoDB kernel. The optimal value
# depends highly on the application, hardware as well as the OS
# scheduler properties. A too high value may lead to thread thrashing.
innodb-thread-concurrency=0

# In MySQL 5.1, InnoDB rolls back only the last statement on a 
# transaction timeout by default. 
# If this variable is specified, a transaction timeout causes InnoDB to 
# abort and roll back the entire transaction
innodb-rollback-on-timeout

# The number of threads that can commit at the same time. 
# Default : O allows any number of transactions to commit simultaneously
innodb-commit-concurrency=0

# The main thread in InnoDB tries to write pages from the buffer pool so 
# that the percentage of dirty (not yet written) pages will not exceed 
# this value. Range : 0 to 100
innodb-max-dirty-pages-pct=75

# Disabling this variable can improve access speed for schemas that have 
# a large number of tables or indexes. It can also improve the stability 
# of execution plans for queries that involve InnoDB tables.
innodb-stats-on-metadata=OFF

# Method using to flush both the data and log files
# Valid values : O_DSYNC, O_DIRECT 
innodb-flush-method=O_DIRECT

# The default transaction isolation level
transaction-isolation=REPEATABLE-READ

# If sync-binlog > 0, the MySQL server synchronizes its binary log to disk. 
# There is one write to the binary log per statement if autocommit is enabled, 
# and one write per transaction otherwise. 
# The default value of sync_binlog is 0, which does no synchronizing to disk
sync-binlog=0

# MYSQL 5.5 / INNODB > 1.1 parameters
innodb-adaptive-flushing=1		#[0-1] default=1
innodb-buffer-pool-instances=1		#[1-64] set > 1 to split buffer pool when size > 1 GB 
innodb-change-buffering=all		#[inserts|none] default=inserts
innodb-file-format=Antelope		#[antelope|barracuda] default=antelope , baraccuda = for table compression
innodb-file-format-check=1		#boolean [0|1] default=1
innodb-file-format-max=Antelope		#[antelope|barracuda] default=antelope , baraccuda = for table compression
innodb-io-capacity=200			#[100-xxxx] default=200 limit nb of I/O per sec
innodb-old-blocks-pct=37		#[5-95] default=37
innodb-old-blocks-time=0		#[0-xxxx] default=0
innodb-purge-batch-size=20		#[1-5000] default=20
innodb-purge-threads=1			#[0-1] default=0 no big gain to change it
innodb-read-ahead-threshold=56		#[0-64] default=56
innodb-read-io-threads=16		#default=4
innodb-replication-delay=0		#default=0 replication delay on slave if innodb-thread-concurrency reached
innodb-spin-wait-delay=6		#[0-xxx] default=6
innodb-stats-sample-pages=8		#numeric default=8
innodb-strict-mode=0                    #boolean [O|1] default=O
innodb-use-native-aio=1                 #boolean [0|1] default=1
innodb-use-sys-malloc=1                 #boolean [0|1] default=1
innodb-write-io-threads=16		#default=4

###########################################################################
# Other InnoDB specific options
###########################################################################
innodb-checksums=1			#boolean [0|1] default=1
innodb-concurrency-tickets=500		#[1-4294967295] default=500
innodb-doublewrite			#default=enabled
innodb-max-purge-lag=0			#[0-4294967295] default=0
innodb-sync-spin-loops=30		#default=30 nb of wait mutex before thread suspended
innodb-table-locks=on                   #boolean default=on
innodb-thread-sleep-delay=10000         #[0-10000] microseconds sleep before innodb thread join queue

# MYSQL 5.6
innodb-checksum-algorithm=INNODB        #[innodb|crc32|none] default=innodb
innodb-print-all-deadlocks              #boolean default=off
innodb-page-size=16k                    #[4k|8k|16k] default=16k

#***********************************************************************
#*                 REPLICATION Specific options 
#***********************************************************************

# required unique id between 1 and 2^32 - 1
# defaults to 1 if master-host is not set
# but will not function as a master if omitted
#server-id=

# The host name or IP number of the slave to be reported to the master 
# during slave registration
#report-host=

# Specify whether to use row-based, statement-based, or mixed
# replication (ROW, STATEMENT, MIXED)
binlog-format=MIXED

# Controls the type conversion mode in effect on the slave when using
# row-based replication. Its value is a comma-delimited set of zero or more elements from the list: ALL_LOSSY, ALL_NON_LOSSY.
#slave_type_conversions

# When this option is used, it causes updates to non-transactional tables 
# using the statement-based logging format to be written directly to the 
# binary log, rather than to the transaction cache.
binlog-direct-non-transactional-updates

# Tells the slave server not to start the slave threads 
# when the server starts
skip-slave-start

# Cause the slave to allow no updates except from slave threads or from 
# users having the SUPER privilege
#read-only

# Normally, a slave does not log to its own binary log any updates that
# are received from a master server. This option tells the slave to log
# the updates performed by its SQL thread to its own binary log
#log-slave-updates

# When the slow query log is enabled, this option enables logging for 
# queries that have taken more than long_query_time seconds to execute 
# on the slave
log-slow-slave-statements

# The name to use for the file in which the slave records information 
# about the master
#master-info-file=

# The number of seconds to wait for more data from the master before the 
# slave considers the connection broken, aborts the read, and tries to 
# reconnect. The first retry occurs immediately after the timeout
# slave-net-timeout=3600

# The size at which the server rotates relay log files automatically
max-relay-log-size=256M

# The basename for the relay log
#relay-log=

# The name to use for the relay log index file
#relay-log-index=

# The name to use for the file in which the slave records information 
# about the relay logs
#relay-log-info-file=

# Disable or enable automatic purging of relay logs as soon as they 
# are no longer needed
relay-log-purge=1

# This option places an upper limit on the total size in bytes of all 
# relay logs on the slave. A value of 0 means no limit. 
relay-log-space-limit=0

# This should be used following a crash on the replication slave to
# ensure that no possibly corrupted relay logs are processed. i
# The default value is 0 (disabled).
#relay_log_recovery=OFF

# Force synchonization to disk on slave
#sync_master_info=0
#sync_relay_log=0
#sync_relay_log_info=0

# MYSQL 5.6
# Disable or enable the master to verify events from the binary log using checksums, 
# and to stop with an error in the event of a mismatch (default=0)
master-verify-checksum=1 
# Disable or enable the slave to control reading of checksums by the slave (from the relay) log
# (default=0)
slave-sql-verify-checksum=1
# This variable causes the master to write a checksum for each event in the binary log 
# (default=CRC32)
binlog-checksum=NONE

# To configure this host as a replication slave, use the CHANGE MASTER
# TO command - The syntax is
#    CHANGE MASTER TO MASTER_HOST=<host>, MASTER_PORT=<port>,
#    MASTER_USER=<user>, MASTER_PASSWORD=<password>;

# Semi-synchronous replication configuration
plugin-load=rpl_semi_sync_master=semisync_master.so
plugin-load=rpl_semi_sync_slave=semisync_slave.so
# On Master
#rpl_semi_sync_master_enabled=0       # [0|1] default=OFF
#rpl_semi_sync_master_timeout=10000   # default=10000ms=10s
#rpl_semi_sync_master_wait_no_slave=1 # [0|1] default=ON
#rpl_semi_sync_master_trace_level=32
# On Slave
#rpl_semi_sync_slave_enabled=0        # [0|1] default=OFF
#rpl_semi_sync_slave_trace_level=32

