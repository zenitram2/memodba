#!/bin/ksh
#==============================================================================
#
# NOM
#      metricsMysql.sh
#
# ********************************************************
# AUTEUR           : MEMODBA
# VERSION          : 1.01.00
# DATE DE CREATION : 20150113
# ********************************************************
#
#----------------------------------------------------------------------------------------------------
# Set debug mode
#----------------------------------------------------------------------------------------------------
#set -v
#set -x

[ `uname -s` = "Linux" ] && alias echo='echo -e'

# Source function library
if [ -r /opt/mysql/bin/fonctionsMysql.ksh ]
    then
      . /opt/mysql/bin/fonctionsMysql.ksh
    else
      echo "\tERROR - [MYQ-15001] THE FILE /opt/mysql/bin/fonctionsMysql.ksh DOESN'T EXIST OR IS NOT READABLE"
      exit 1
fi

#----------------------------------------------------------------------------------------------------
# Display function
#----------------------------------------------------------------------------------------------------
Myq_banner()
{
timeb=`date +"%Y/%m/%d %HH%M"`
echo "----------------------------------------------------------------------------------------------------------------"|tee -a ${log}
echo " $1\tSERVER : ${servername}\tDATABASE : all\t\t\t$2:\t${timeb}"|tee -a ${log}
echo "----------------------------------------------------------------------------------------------------------------"|tee -a ${log}
return 0
}

#----------------------------------------------------------------------------------------------------
# End script
#----------------------------------------------------------------------------------------------------
Myq_endExec()
{
rc=$1
echo "\tINFO  - END OF $0 ON ${ProductName} SERVER ${servername}" | tee -a ${log} 2>&1
echo "\tINFO  - SEE THE LOG FILE ${log}" | tee -a ${log} 2>&1
if [ "${rc}" -ne "0" ]
   then
     echo "\t${COLOR_ERROR}ERROR - [MYQ-19001] THE PROCESS TERMINATED UNSUCCESSFULLY${COLOR_NORMAL}" | tee -a ${log} 2>&1
   else
     echo "\t${COLOR_SUCCESS}INFO  - THE PROCESS TERMINATED SUCCESSFULLY${COLOR_NORMAL}" | tee -a ${log} 2>&1
fi
echo "\t${COLOR_END}INFO  - END ON `uname -n` AT `date \"+%Y/%m/%d %H:%M:%S\"`${COLOR_NORMAL}" | tee -a ${log} 2>&1
Myq_banner "${text}" End
chmod 644 ${log} 1>>${log} 2>&1
chown ${MysqlOsUser}:${MysqlOsGroup} ${log} 1>>${log} 2>&1
exit ${rc}
}

#----------------------------------------------------------------------------------------------------
# Check the presence and validity of the parameters
#----------------------------------------------------------------------------------------------------
Myq_ctrlUsage()
{
messusage="\t${COLOR_ERROR}ERROR - [MYQ-01001] USAGE : $0 <servername> [<retention>]${COLOR_NORMAL}" 

if [ ${nbparams} -eq 0 ]
   then
     echo ${messusage} | tee -a ${log} 2>&1
     return 1
fi

echo ${servername} | grep "^my" 1>/dev/null 2>&1
if [ $? -gt 0 ]
   then
     echo ${messusage} | tee -a ${log} 2>&1
     echo "\t${COLOR_ERROR}ERROR - [MYQ-50012] THE PARAMETER SERVERNAME IS INCORRECT. IT MUST BE myxxxxxxxx. EXIT${COLOR_NORMAL}" | tee -a ${log} 2>&1
     return 1
fi

if [ -z ${retention} ]
   then
     retention=${defaultret}
   else
     if [ ${retention} -eq 0 ]
        then
           echo ${messusage} | tee -a ${log} 2>&1
           echo "\t${COLOR_ERROR}ERROR - [MYQ-01008] THE PARAMETER RETENTION IS INCORRECT. IT MUST BE > 0. EXIT${COLOR_NORMAL}" | tee -a ${log} 2>&1
           return 1
     fi
fi

return 0
}

#----------------------------------------------------------------------------------------------------
# CPU Usage in % (System and User}
#----------------------------------------------------------------------------------------------------
Myq_cpuUsage()
{
CpuGlobalUsage=`sar -u 2 5 | tail -1`
rc1=$?
CpuSystemUsagePct=`echo ${CpuGlobalUsage} | awk '{print $5}'` 
rc2=$?
CpuUserUsagePct=`echo ${CpuGlobalUsage} | awk '{print $3}'`  
rc3=$?
case "${rc1}|${rc2}|${rc3}" in
     "0|0|0") return 0;;
           *) return 1;;
esac
}

#----------------------------------------------------------------------------------------------------
# Memory Usage in MB of a MySQL Server
#----------------------------------------------------------------------------------------------------
Myq_memoryUsage()
{
MysqlMemorySizeKb=`ps -eF | grep [m]ysqld | grep "${servername}/" | grep -v mysqld_safe | awk -F' ' '{print $6}'`
rc1=$?
MysqlMemorySizeMb=`expr ${MysqlMemorySizeKb} / 1024`
rc2=$?
case "${rc1}|${rc2}" in
     "0|0") return 0;;
         *) return 1;;
esac
}

#----------------------------------------------------------------------------------------------------
# Datas size and Indexs size in MB of a MySQL Server
#----------------------------------------------------------------------------------------------------
Myq_databasesSpaceDisk()
{
MysqlDataSizeMb=`mysql -u ${MysqlAdminUser} -sBNe 'select TRUNCATE(sum(data_length)/1048576, 2) from information_schema.tables'`
rc1=$?
MysqlIndexSizeMb=`mysql -u ${MysqlAdminUser} -sBNe 'select TRUNCATE(sum(index_length)/1048576, 2) from information_schema.tables'`
rc2=$?
case "${rc1}|${rc2}" in
     "0|0") return 0;;
         *) return 1;;
esac
}

#----------------------------------------------------------------------------------------------------
# Uptime and Threads Connected of a MySQL Server
#----------------------------------------------------------------------------------------------------
Myq_sessions()
{
MysqlUptimeSec=`mysql -u ${MysqlAdminUser} -sBNe "show global status where variable_name = 'Uptime'" | awk '{print $2}'`
rc1=$?
MysqlThreadsConnected=`mysql -u ${MysqlAdminUser} -sBNe "show global status where variable_name = 'Threads_connected'" | awk '{print $2}'`
rc2=$?
case "${rc1}|${rc2}" in
     "0|0") return 0;;
         *) return 1;;
esac
}

#----------------------------------------------------------------------------------------------------
# DML statements of a MySQL Server
#----------------------------------------------------------------------------------------------------
Myq_dmlUsage()
{
ComSelect=`mysql -u ${MysqlAdminUser} -sBNe "show global status where variable_name = 'Com_select'" | awk '{print $2}'`
QcacheHits=`mysql -u ${MysqlAdminUser} -sBNe "show global status where variable_name = 'Qcache_hits'" | awk '{print $2}'`
ComInsert=`mysql -u ${MysqlAdminUser} -sBNe "show global status where variable_name = 'Com_insert'" | awk '{print $2}'`
ComInsertSelect=`mysql -u ${MysqlAdminUser} -sBNe "show global status where variable_name = 'Com_insert_select'" | awk '{print $2}'`
ComUpdate=`mysql -u ${MysqlAdminUser} -sBNe "show global status where variable_name = 'Com_update_multi'" | awk '{print $2}'`
ComUpdateMulti=`mysql -u ${MysqlAdminUser} -sBNe "show global status where variable_name = 'Com_update_multi'" | awk '{print $2}'`
ComDelete=`mysql -u ${MysqlAdminUser} -sBNe "show global status where variable_name = 'Com_delete'" | awk '{print $2}'`
ComDeleteMulti=`mysql -u ${MysqlAdminUser} -sBNe "show global status where variable_name = 'Com_delete_multi'" | awk '{print $2}'`
MysqlNumSelect=`expr ${ComSelect} + ${QcacheHits}`
if [ $? -gt 1 ]
   then
     rc1=1
   else
     rc1=0
fi
MysqlNumInsert=`expr ${ComInsert} + ${ComInsertSelect}`
if [ $? -gt 1 ]
   then
     rc2=1
   else
     rc2=0
fi
MysqlNumUpdate=`expr ${ComUpdate} + ${ComUpdateMulti}`
if [ $? -gt 1 ]
   then
     rc3=1
   else
     rc3=0
fi
MysqlNumDelete=`expr ${ComDelete} + ${ComDeleteMulti}`
if [ $? -gt 1 ]
   then
     rc4=1
   else
     rc4=0
fi
case "${rc1}|${rc2}|${rc3}|${rc4}" in
     "0|0|0|0") return 0;;
             *) return 1;;
esac
}

#----------------------------------------------------------------------------------------------------
# Delete log files older than n days
#----------------------------------------------------------------------------------------------------
Myq_deleteOld()
{
ret=`expr ${retention} - 1`
echo "\tINFO  - DELETE OLD LOG FILES (retention ${ret} days) :" | tee -a ${log} 2>&1
find ${MY_LOGDIR} -name ${name}_${servername}_*.log -mtime +${ret} -print | tee -a ${log} 2>&1
find ${MY_LOGDIR} -name ${name}_${servername}_*.log -mtime +${ret} -print -exec rm -f {} \;
numlines=`expr ${ret} \* 288`
rm -f /tmp/my_${servername}_metrics 2>>${log}
tail -${numlines} ${MetricsFile} >>/tmp/my_${servername}_metrics 2>>${log}
cat /tmp/my_${servername}_metrics >${MetricsFile} 2>>${log}
if [ $? -eq 0 ]
   then
     return 0
   else
     return 1
fi
}

#----------------------------------------------------------------------------------------------------
# Main
#----------------------------------------------------------------------------------------------------

script=$0
servername=$1

if [ "${servername}" = "help" -o "${servername}" = "--help" ]
   then
     echo "USAGE : $0 <servername> [<retention>]"
     echo "           <servername> = my<3 to 8 numbers and/or lowercase letters>"
     echo "          [<retention>] = xx days (default value : 2)"
     exit 0
fi

retention=$2
nbparams=$#

umask 022
export LANG=C
time=`date "+%Y%m%d"`

Myq_initEnv ${servername}

defaultret=7

name=`basename ${script} | cut -d. -f1`
text=`basename ${script}`
log=${MY_LOGDIR}/${name}_${servername}_${time}.log
MetricsFile=${MY_TMPDIR}/${servername}_metrics.txt
Day=`date "+%Y-%m-%d"`
Hour=`date "+%H:%M"`


[ `uname -s` = "Linux" ] && alias echo='echo -e'

Myq_banner "${text}" Begin

Myq_beginExec

Myq_ctrlUser ${MysqlOsUser}
[ $? -ne 0 ] && Myq_endExec 1

Myq_ctrlUsage
[ $? -ne 0 ] && Myq_endExec 1

Myq_ctrlExistMysqlServer ${servername}
[ $? -ne 0 ] && Myq_endExec 1

Myq_initMysqlEnv ${servername}
[ $? -ne 0 ] && Myq_endExec 1

Myq_cpuUsage
[ $? -gt 0 ] && CpuSystemUsagePct=0 && CpuUserUsagePct=0

Myq_ctrlMysqlStatusServer silent
if [ $? -eq 0 ]
   then
     MysqlStatus=on
     Myq_memoryUsage
     [ $? -gt 0 ] && MysqlMemorySizeMb=0
     Myq_sessions
     [ $? -gt 0 ] && MysqlUptimeSec=0 && MysqlThreadsConnected=0
     Myq_dmlUsage
     [ $? -gt 0 ] && MysqlNumSelect=0 && MysqlNumInsert=0 && MysqlNumUpdate=0 && MysqlNumDelete=0
     Myq_databasesSpaceDisk
     [ $? -gt 0 ] && MysqlDataSizeMb=0 && MysqlIndexSizeMb=0
   else
     MysqlStatus=off
     MysqlUptimeSec=0 
     MysqlMemorySizeMb=0
     MysqlThreadsConnected=0
     MysqlNumSelect=0
     MysqlNumInsert=0
     MysqlNumUpdate=0
     MysqlNumDelete=0
     MysqlDataSizeMb=0
     MysqlIndexSizeMb=0
fi

Myq_deleteOld

echo "\tINFO  - ADD A ENTRY IN THE METRIC FILE ${MetricsFile}" | tee -a ${log} 2>&1
echo "${Day};${Hour};${MysqlStatus};${MysqlUptimeSec};${MysqlMemorySizeMb};${MysqlThreadsConnected};${MysqlNumSelect};${MysqlNumInsert};${MysqlNumUpdate};${MysqlNumDelete};${MysqlDataSizeMb};${MysqlIndexSizeMb};${CpuSystemUsagePct};${CpuUserUsagePct};" >>${MetricsFile}

Myq_endExec $?

