#!/bin/bash
# 00 20 * * *  postgres /var/lib/pgsql/backups/sauve_postgresql.sh >> /var/lib/pgsql/backups/sauve_postgresql.log 2>&1


backup_dir="/var/lib/pgsql/backups/"
log="sauve_postgresql_`date +%Y%m%d`.txt"
retention=7
user="sauve"

#Debut de la sauvegarde
echo "`date +%H:%M:%S`  Debut de la sauvegarde" > ${backup_dir}${log}

if [ ! -d $backup_dir ]; then
  mkdir -p $backup_dir
fi

LIST=$(psql -l | awk '{ print $1}' | grep -vE '^-|^List|^Name|template[0|1]|postgres|^\(')
for database in $LIST ; do
  pg_dump --format=c --compress=5 --file=${backup_dir}${database}_`date +%Y%m%d`.dmp ${database}
   
  if [ $? != 0 ]; then
        echo "`date +%H:%M:%S`  La sauvegarde de la base ${database} n'a pas fonctionne" >> ${backup_dir}${log}
        exit 1
  else
        echo "`date +%H:%M:%S`  Sauvegarde de la base ${database} OK" >> ${backup_dir}${log}
  fi
done

#Purge des vieux fichiers defini par la retention
echo "`date +%H:%M:%S`  Purge des dumps vieux de plus de ${retention} jours" >> ${backup_dir}${log}

find $backup_dir -name "*.dmp" -type f -prune -mtime +${retention} -exec rm -f {} \;
find $backup_dir -name "*.txt" -type f -prune -mtime +${retention} -exec rm -f {} \;

echo "`date +%H:%M:%S`  Fin de traitement" >> ${backup_dir}${log}
exit 0




